events {
    worker_connections 512;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile        on;
    keepalive_timeout 65;
    client_max_body_size 100M;

    # Gzip settings
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

    # HTTP server
    server {
        listen 80;
        server_name localhost;

        # Location block for endpoints with /api
        location /api/ {
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS headers for development
            add_header "Access-Control-Allow-Origin" "http://localhost:5173" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
            add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header "Access-Control-Allow-Credentials" "true" always;

            # Handle OPTIONS method
            if ($request_method = 'OPTIONS') {
                add_header "Access-Control-Allow-Origin" "http://localhost:5173" always;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
                add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
                add_header "Access-Control-Max-Age" 1728000;
                add_header "Content-Type" "text/plain charset=UTF-8";
                add_header "Content-Length" 0;
                return 204;
            }
        }

        # Additional location block for endpoints without /api prefix (e.g., /users, /token)
        location ~ ^/(users|token) {
            rewrite ^/(.*)$ /$1 break;
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS headers for development
            add_header "Access-Control-Allow-Origin" "http://localhost:5173" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
            add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header "Access-Control-Allow-Credentials" "true" always;

            # Handle OPTIONS method
            if ($request_method = 'OPTIONS') {
                add_header "Access-Control-Allow-Origin" "http://localhost:5173" always;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
                add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
                add_header "Access-Control-Max-Age" 1728000;
                add_header "Content-Type" "text/plain charset=UTF-8";
                add_header "Content-Length" 0;
                return 204;
            }
        }

        # Serve uploaded files
        location /uploads/ {
            alias /app/uploads/;
            expires 1h;
            add_header Cache-Control "public, no-transform";
        }

        # Serve frontend static files
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control "public, no-transform";
        }
    }
}
